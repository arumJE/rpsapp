{"ast":null,"code":"import _classCallCheck from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arumgaladima/appserve_01/rps/web/src/components/SubHeader.js\";\nimport React, { Component } from 'react';\nimport { Grid, Row, Col, Badge, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\nimport { admin } from '../firebase.js'; // Initialize firestore\n\nvar db = admin.firestore(); // Disable deprecated features\n\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nvar SubHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubHeader, _Component);\n\n  function SubHeader(props) {\n    var _this;\n\n    _classCallCheck(this, SubHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubHeader).call(this, props));\n    _this.state = {\n      redirect: false,\n      userEmail: '',\n      modalIsOpen: false\n    };\n    _this.resetEmail = _this.resetEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SubHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n          targetUrl = 'https://api.spotify.com/v1/albums/6akEvsycLGftJxYudPjmqK/tracks?offset=0&limit=2'; // Send the stored forms to the server\n\n      fetch(targetUrl, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Credentials\": true,\n          \"Access-Control-Request-Method\": \"*\",\n          \"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\"\n        }\n      }).then(function (response) {\n        //console.log(response);\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n      }).catch(function (err) {\n        console.log(err);\n      });\n      admin.auth().onAuthStateChanged(function (user) {\n        if (user === null) {\n          _this2.setState({\n            redirect: true\n          });\n        }\n\n        _this2.setState({\n          userEmail: user.email\n        });\n\n        var data = {\n          name: user.displayName,\n          email: user.email,\n          dashboards: 'IT'\n        }; // Add a new document in collection \"cities\" with ID 'LA'\n\n        var userRef = db.collection('users').doc(user.uid);\n        var setWithOptions = userRef.set(data, {\n          merge: true\n        }); // if the team of the individual is of a certain type, render a certain group of Dashboards\n\n        var getDoc = userRef.get().then(function (doc) {\n          if (!doc.exists) {\n            console.log('No such document!');\n          } else {\n            // console.log('Document data:', doc.data().team);\n            // While user's 'team' matches the doc, render it\n            for (var i = 0; i < Dashes.dashboards.length; i++) {// console.log(Dashes.dashboards[i].url);\n              // if (Dashes.dashboards[i].group === doc.data().team) {\n              //\n              // }\n            }\n          }\n        }).catch(function (err) {\n          console.log('Error getting document', err);\n        });\n      });\n    } // reset email\n\n  }, {\n    key: \"resetEmail\",\n    value: function resetEmail() {\n      console.log('reset email is: ', this.state.userEmail);\n      admin.auth().sendPasswordResetEmail(this.state.userEmail).then(function () {\n        // Email sent.\n        alert('A password reset email has been sent');\n      }).catch(function (error) {// An error happened.\n      }); // console.log('useremail is: ', this.state.userEmail);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      console.log('clicked');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"link\",\n        onClick: this.resetEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Reset Password\"), React.createElement(Button, {\n        bsStyle: \"link\",\n        onClick: this.loadData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Load Data\"));\n    }\n  }]);\n\n  return SubHeader;\n}(Component);\n\nexport default SubHeader;","map":{"version":3,"sources":["/Users/arumgaladima/appserve_01/rps/web/src/components/SubHeader.js"],"names":["React","Component","Grid","Row","Col","Badge","ListGroup","ListGroupItem","Button","admin","db","firestore","settings","timestampsInSnapshots","SubHeader","props","state","redirect","userEmail","modalIsOpen","resetEmail","bind","loadData","proxyUrl","targetUrl","fetch","headers","then","response","json","data","console","log","catch","err","auth","onAuthStateChanged","user","setState","email","name","displayName","dashboards","userRef","collection","doc","uid","setWithOptions","set","merge","getDoc","get","exists","i","Dashes","length","sendPasswordResetEmail","alert","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Row, Col, Badge, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\n\nimport {admin} from '../firebase.js';\n\n// Initialize firestore\nlet db = admin.firestore();\n// Disable deprecated features\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nclass SubHeader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: false,\n      userEmail: '',\n      modalIsOpen: false\n    };\n    this.resetEmail = this.resetEmail.bind(this);\n\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount(){\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n      targetUrl = 'https://api.spotify.com/v1/albums/6akEvsycLGftJxYudPjmqK/tracks?offset=0&limit=2';\n    // Send the stored forms to the server\n    fetch(targetUrl, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true,\n        \"Access-Control-Request-Method\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\"\n      }\n    })\n    .then(function(response){\n      //console.log(response);\n      return response.json();\n    })\n    .then(function(data){\n      console.log(data);\n    })\n    .catch(function(err){\n      console.log(err);\n    });\n\n    admin.auth().onAuthStateChanged((user) => {\n      if(user === null) {\n        this.setState({redirect: true});\n      }\n    this.setState({userEmail: user.email});\n      var data = {\n        name: user.displayName,\n        email: user.email,\n        dashboards: 'IT'\n      };\n\n      // Add a new document in collection \"cities\" with ID 'LA'\n      var userRef = db.collection('users').doc(user.uid);\n\n      var setWithOptions = userRef.set(data, {merge: true});\n\n      // if the team of the individual is of a certain type, render a certain group of Dashboards\n      var getDoc = userRef.get()\n        .then(doc => {\n          if (!doc.exists) {\n            console.log('No such document!');\n          } else {\n            // console.log('Document data:', doc.data().team);\n            // While user's 'team' matches the doc, render it\n            for (var i = 0; i < Dashes.dashboards.length; i++) {\n              // console.log(Dashes.dashboards[i].url);\n              // if (Dashes.dashboards[i].group === doc.data().team) {\n              //\n              // }\n            }\n          }\n        })\n        .catch(err => {\n          console.log('Error getting document', err);\n        });\n    });\n  }\n\n  // reset email\n  resetEmail() {\n    console.log('reset email is: ', this.state.userEmail);\n    admin.auth().sendPasswordResetEmail(this.state.userEmail).then(function() {\n      // Email sent.\n      alert('A password reset email has been sent');\n    }).catch(function(error) {\n      // An error happened.\n    });\n    // console.log('useremail is: ', this.state.userEmail);\n  }\n\n  loadData() {\n    console.log('clicked');\n  }\n\n  render() {\n    return (\n      <div>\n        <Button bsStyle=\"link\" onClick={this.resetEmail}>Reset Password</Button>\n        <Button bsStyle=\"link\" onClick={this.loadData}>Load Data</Button>\n      </div>\n    );\n  }\n}\n\nexport default SubHeader;\n"]},"metadata":{},"sourceType":"module"}