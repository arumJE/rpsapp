{"ast":null,"code":"import _classCallCheck from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arumgaladima/appserve_01/rps/web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arumgaladima/appserve_01/rps/web/src/components/SubHeaderEvents.js\";\nimport React, { Component } from 'react';\nimport { Grid, Row, Col, Badge, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\nimport { admin } from '../firebase.js'; // Initialize firestore\n\nvar db = admin.firestore(); // Disable deprecated features\n\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nvar SubHeaderEvents =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubHeaderEvents, _Component);\n\n  function SubHeaderEvents(props) {\n    var _this;\n\n    _classCallCheck(this, SubHeaderEvents);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubHeaderEvents).call(this, props));\n    _this.state = {\n      redirect: false,\n      userEmail: '',\n      modalIsOpen: false\n    };\n    _this.resetEmail = _this.resetEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadData = _this.loadData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SubHeaderEvents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      admin.auth().onAuthStateChanged(function (user) {\n        if (user === null) {\n          _this2.setState({\n            redirect: true\n          });\n        }\n\n        _this2.setState({\n          userEmail: user.email\n        });\n\n        var data = {\n          name: user.displayName,\n          email: user.email,\n          dashboards: 'IT'\n        }; // Add a new document in collection \"cities\" with ID 'LA'\n\n        var userRef = db.collection('users').doc(user.uid);\n        var setWithOptions = userRef.set(data, {\n          merge: true\n        });\n      });\n    } // reset email\n\n  }, {\n    key: \"resetEmail\",\n    value: function resetEmail() {\n      console.log('reset email is: ', this.state.userEmail);\n      admin.auth().sendPasswordResetEmail(this.state.userEmail).then(function () {\n        // Email sent.\n        alert('A password reset email has been sent');\n      }).catch(function (error) {// An error happened.\n      }); // console.log('useremail is: ', this.state.userEmail);\n    }\n  }, {\n    key: \"loadData\",\n    value: function loadData() {\n      console.log('clicked');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"link\",\n        onClick: this.loadData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Show Live Events\"));\n    }\n  }]);\n\n  return SubHeaderEvents;\n}(Component);\n\nexport default SubHeaderEvents;","map":{"version":3,"sources":["/Users/arumgaladima/appserve_01/rps/web/src/components/SubHeaderEvents.js"],"names":["React","Component","Grid","Row","Col","Badge","ListGroup","ListGroupItem","Button","admin","db","firestore","settings","timestampsInSnapshots","SubHeaderEvents","props","state","redirect","userEmail","modalIsOpen","resetEmail","bind","loadData","auth","onAuthStateChanged","user","setState","email","data","name","displayName","dashboards","userRef","collection","doc","uid","setWithOptions","set","merge","console","log","sendPasswordResetEmail","then","alert","catch","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,SAAhC,EAA2CC,aAA3C,EAA0DC,MAA1D,QAAwE,iBAAxE;AAEA,SAAQC,KAAR,QAAoB,gBAApB,C,CAEA;;AACA,IAAIC,EAAE,GAAGD,KAAK,CAACE,SAAN,EAAT,C,CACA;;AACAD,EAAE,CAACE,QAAH,CAAY;AACVC,EAAAA,qBAAqB,EAAE;AADb,CAAZ;;IAIMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AAViB;AAWlB;;;;wCAEmB;AAAA;;AAClBZ,MAAAA,KAAK,CAACc,IAAN,GAAaC,kBAAb,CAAgC,UAACC,IAAD,EAAU;AACxC,YAAGA,IAAI,KAAK,IAAZ,EAAkB;AAChB,UAAA,MAAI,CAACC,QAAL,CAAc;AAACT,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACD;;AACH,QAAA,MAAI,CAACS,QAAL,CAAc;AAACR,UAAAA,SAAS,EAAEO,IAAI,CAACE;AAAjB,SAAd;;AACE,YAAIC,IAAI,GAAG;AACTC,UAAAA,IAAI,EAAEJ,IAAI,CAACK,WADF;AAETH,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAFH;AAGTI,UAAAA,UAAU,EAAE;AAHH,SAAX,CALwC,CAWxC;;AACA,YAAIC,OAAO,GAAGtB,EAAE,CAACuB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BT,IAAI,CAACU,GAAhC,CAAd;AAEA,YAAIC,cAAc,GAAGJ,OAAO,CAACK,GAAR,CAAYT,IAAZ,EAAkB;AAACU,UAAAA,KAAK,EAAE;AAAR,SAAlB,CAArB;AACD,OAfD;AAgBD,K,CAED;;;;iCACa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKxB,KAAL,CAAWE,SAA3C;AACAT,MAAAA,KAAK,CAACc,IAAN,GAAakB,sBAAb,CAAoC,KAAKzB,KAAL,CAAWE,SAA/C,EAA0DwB,IAA1D,CAA+D,YAAW;AACxE;AACAC,QAAAA,KAAK,CAAC,sCAAD,CAAL;AACD,OAHD,EAGGC,KAHH,CAGS,UAASC,KAAT,EAAgB,CACvB;AACD,OALD,EAFW,CAQX;AACD;;;+BAEU;AACTN,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAE,KAAKlB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAKD;;;;EAvD2BrB,S;;AA0D9B,eAAea,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Row, Col, Badge, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\n\nimport {admin} from '../firebase.js';\n\n// Initialize firestore\nlet db = admin.firestore();\n// Disable deprecated features\ndb.settings({\n  timestampsInSnapshots: true\n});\n\nclass SubHeaderEvents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: false,\n      userEmail: '',\n      modalIsOpen: false\n    };\n    this.resetEmail = this.resetEmail.bind(this);\n\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    admin.auth().onAuthStateChanged((user) => {\n      if(user === null) {\n        this.setState({redirect: true});\n      }\n    this.setState({userEmail: user.email});\n      var data = {\n        name: user.displayName,\n        email: user.email,\n        dashboards: 'IT'\n      };\n\n      // Add a new document in collection \"cities\" with ID 'LA'\n      var userRef = db.collection('users').doc(user.uid);\n\n      var setWithOptions = userRef.set(data, {merge: true});\n    });\n  }\n\n  // reset email\n  resetEmail() {\n    console.log('reset email is: ', this.state.userEmail);\n    admin.auth().sendPasswordResetEmail(this.state.userEmail).then(function() {\n      // Email sent.\n      alert('A password reset email has been sent');\n    }).catch(function(error) {\n      // An error happened.\n    });\n    // console.log('useremail is: ', this.state.userEmail);\n  }\n\n  loadData() {\n    console.log('clicked');\n  }\n\n  render() {\n    return (\n      <div>\n        <Button bsStyle=\"link\" onClick={this.loadData}>Show Live Events</Button>\n      </div>\n    );\n  }\n}\n\nexport default SubHeaderEvents;\n"]},"metadata":{},"sourceType":"module"}